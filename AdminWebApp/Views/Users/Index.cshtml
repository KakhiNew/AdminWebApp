@model UserListVm

@{
    ViewData["Title"] = "User Management";
    Layout = "_Layout";
}

<h1>User Management</h1>

<form asp-controller="Users" method="post" asp-antiforgery="false">
    <div class="toolbar">
        <button id="blockButton" disabled class="btn btn-danger" asp-action="BlockUsers">Block</button>
        <button id="unblockButton" disabled class="btn btn-success" asp-action="UnblockUsers">Unblock</button>
        <button id="deleteButton" disabled class="btn btn-danger" asp-action="DeleteUsers" onclick="return confirm('Do you want to delete selected entries?')">Delete</button>
    </div>

    <table id="userTable" class="table table-striped">
        <thead>
            <tr>
                <th>
                    <input type="checkbox" id="selectAllCheckbox" />
                </th>
                <th>Id</th>
                <th>Name</th>
                <th>Email</th>
                <th>Last Login Time</th>
                <th>Registration Time</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.Users.Count; i++)
            {
                <tr>
                    <td>
                        <input type="hidden" asp-for="@Model.Users[i].Id" />
                        <input type="checkbox"  class="userCheckbox" asp-for="@Model.Users[i].Selected" />
                    </td>
                    <td>@Model.Users[i].Id</td>
                    <td>@Model.Users[i].Name</td>
                    <td>@Model.Users[i].Email</td>
                    <td>@Model.Users[i].LastLoginTime</td>
                    <td>@Model.Users[i].RegistrationTime</td>
                    <td>@(Model.Users[i].Blocked ? "Blocked" : "Active")</td>
                </tr>
            }
        </tbody>
    </table>
</form>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#selectAllCheckbox').change(function () {
                var checkboxes = $('.userCheckbox');
                var checked = $(this).is(':checked');
                checkboxes.prop('checked', checked);
                toggleToolbarButtons(checkboxes);
            });

            $('.userCheckbox').change(function () {
                var checkboxes = $('.userCheckbox');
                toggleToolbarButtons(checkboxes);
            });

            function toggleToolbarButtons(checkboxes) {
                var selectedCount = checkboxes.filter(':checked').length;
                $('#blockButton').prop('disabled', selectedCount === 0);
                $('#unblockButton').prop('disabled', selectedCount === 0);
                $('#deleteButton').prop('disabled', selectedCount === 0);
            }

            function getSelectedUserIds() {
                var selectedUserIds = [];
                $('.userCheckbox:checked').each(function () {
                    selectedUserIds.push($(this).data('id'));
                });
                return selectedUserIds;
            }
        });
    </script>
}
